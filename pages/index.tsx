import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback } from "react";
import Layout from "../components/Layout";
import PostCard from "../components/PostCard";
import { getPosts } from "../services/content";

export default function Home({ posts: originalPosts }) {
  const [highlightPost, ...posts] = originalPosts;

  const router = useRouter();

  const handlehighlightPostClick = useCallback(() => {
    router.push(`/post/${highlightPost.sys.id}`)
  }, []);


  return (
    <div>
      <Head>
        <title>News | Coders Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-4/5 m-auto cursor-pointer bg-white mt-[-42px] rounded-tl-[1.875rem] min-h-[21.5rem] p-6 md:p-14 flex flex-wrap-reverse justify-around" onClick={handlehighlightPostClick}>
        <div className="w-[38.75rem] max-h-80">
          <h2 className="font-bold text-[#232323] text-2xl mb-[0.625rem]">
            {highlightPost.fields.title}
          </h2>
          <p className="text-lg">
            { highlightPost.fields.description }
          </p>
        </div>
        <div className="w-[35.625rem] max-h-80">
          <img
            src={highlightPost.fields.thumbnail.fields.file.url}
            alt="Thumbnail"
            className="w-full h-full object-cover rounded-[1.25rem] hover:opacity-90"
          />
        </div>
      </div>

      <div className="max-w-[90%] m-auto flex gap-16 flex-wrap justify-center">
        {posts.map((post) => (
          <PostCard
            key={post.sys.id}
            id={post.sys.id}
            thumbnail={post.fields.thumbnail.fields.file.url}
            title={post.fields.title}
            description={post.fields.description}
          />
        ))}
      </div>
    </div>
  );
}

Home.getLayout = function getLayout(page) {
  return <Layout title="News">{page}</Layout>;
};

export async function getServerSideProps() {
  const posts = await getPosts();

  return {
    props: {
      posts,
    },
  };
}
